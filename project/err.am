INVALID NAME: mov #0, r0
THISINVALIDLABELNAMEISWAYTOOLONG: mov #0, r0
mov: mov #0, r0
r0: mov #0, r0
.entry: mov #0, r0
DUPLICATELABEL0: mov #0, r0
DUPLICATELABEL0: mov #0, r0
DUPLICATELABEL1: mov #0, r0
.extern DUPLICATELABEL1
.extern DUPLICATELABEL2
.extern DUPLICATELABEL2
EMPTYLABEL:
USELESSLABEL0: .entry USELESSLABEL0
USELESSLABEL1: .extern USELESSLABEL1
UNEXPECTEDSPACE0: mov #0 r0
UNEXPECTEDSPACE1: mov # 0, r0
UNEXPECTEDSPACE2: mov #0, r0 0
UNEXPECTEDSPACE3: jmp UNEXPECTEDSPACE3( #0,r0)
UNEXPECTEDSPACE4: jmp UNEXPECTEDSPACE4(#0,r0 )
UNEXPECTEDSPACE5: jmp UNEXPECTEDSPACE5(#0, r0)
UNEXPECTEDCOMMA0: mov , #0, r0
UNEXPECTEDCOMMA1: mov #0,,r0
UNEXPECTEDCOMMA2: jmp UNEXPECTEDCOMMA2(#0,,r0)
NOTENOUGHPARAMS: mov
TOOMANYPARAMS: stop #0
INVALIDJUMPPARAMS0: jmp INVALIDJUMPPARAMS0(#0)
INVALIDJUMPPARAMS1: jmp INVALIDJUMPPARAMS1(#0,#0,#0)
INVALIDJUMPPARAMS2: jmp INVALIDJUMPPARAMS2()
INVALIDJUMPPARAMS3: jmp INVALIDJUMPPARAMS3, #0
INVALIDSOURCEPARAM: lea #0, r0
INVALIDDESTINATIONPARAM: mov #0, #0
INVALIDNUMBER0: mov #abc, r0
INVALIDNUMBER1: .data abc
INVALIDSTRING0: .string abc
INVALIDSTRING1: .string abc"
UNFINISHEDSTRING0: .string "abc
UNFINISHEDSTRING1: .string "abc"def
STRINGNONASCII: .string "ֲ¶"
UNKNOWNINSTRUCTION: abc
LINEOVERFLOW: .string "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234"

